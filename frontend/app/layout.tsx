import type { Metadata } from 'next';
import localFont from 'next/font/local';
import { DynamicContextProvider } from '@dynamic-labs/sdk-react-core';
import { EthereumWalletConnectors } from '@dynamic-labs/ethereum';
import React from 'react';
import './globals.css';

const evmNetworks = [
  {
    blockExplorerUrls: ['https://sepolia.basescan.org/'],
    chainId: 84532,
    name: 'Base Sepolia',
    iconUrls: ['https://app.dynamic.xyz/assets/networks/base.svg'],
    nativeCurrency: { decimals: 18, name: 'Ether', symbol: 'ETH' },
    networkId: 84532,
    rpcUrls: ['https://sepolia.base.org'],
    vanityName: 'Base Sepolia',
  },
];

const geistSans = localFont({
  src: './fonts/GeistVF.woff',
  variable: '--font-geist-sans',
  weight: '100 900',
});
const geistMono = localFont({
  src: './fonts/GeistMonoVF.woff',
  variable: '--font-geist-mono',
  weight: '100 900',
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <DynamicContextProvider
          settings={{
            environmentId: process.env.NEXT_PUBLIC_DYNAMIC_ENVIRONMENT_ID ?? '',
            overrides: {
              evmNetworks,
            },
            walletConnectors: [EthereumWalletConnectors],
            authMode: 'connect-only',
          }}
        >
          {children}
        </DynamicContextProvider>
      </body>
    </html>
  );
}
